{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP_Repository\\\\GYM Chatbot 2025.3\\\\frontend\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Form, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [sessionId, setSessionId] = useState(localStorage.getItem('chatSessionId') || '');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const messagesEndRef = useRef(null);\n  const connectWebSocket = () => {\n    setIsConnecting(true);\n\n    // Build the WebSocket URL with session ID if available\n    const wsUrl = sessionId ? `ws://localhost:8000/ws/chat?session_id=${sessionId}` : 'ws://localhost:8000/ws/chat';\n    const newSocket = new WebSocket(wsUrl);\n    newSocket.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnecting(false);\n    };\n    newSocket.onmessage = event => {\n      const parsedData = JSON.parse(event.data);\n\n      // Handle session ID message\n      if (parsedData.event_type === 'session_id') {\n        const newSessionId = parsedData.data;\n        setSessionId(newSessionId);\n        localStorage.setItem('chatSessionId', newSessionId);\n      }\n      // Handle history message\n      else if (parsedData.event_type === 'history') {\n        setMessages(parsedData.data);\n      }\n      // Handle regular messages\n      else {\n        handleSocketMessage(event.data);\n      }\n    };\n    newSocket.onclose = event => {\n      console.log('WebSocket connection closed', event.code);\n      setIsConnecting(false);\n    };\n    newSocket.onerror = error => {\n      console.error('WebSocket error:', error);\n      setIsConnecting(false);\n    };\n    setSocket(newSocket);\n    return newSocket;\n  };\n  useEffect(() => {\n    const ws = connectWebSocket();\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) {\n        ws.close();\n      }\n    };\n  }, []); // Only connect once on component mount\n\n  const handleSocketMessage = data => {\n    const parsedData = JSON.parse(data);\n    if (parsedData.event_type === 'document') {\n      // Handle document event\n    } else if (parsedData.event_type === 'answer') {\n      let answer = parsedData.data;\n      setMessages(prevMessages => {\n        const updatedMessages = [...prevMessages];\n        const loadingMessageIndex = updatedMessages.findIndex(msg => msg.role === 'assistant' && msg.message === 'loading...');\n        if (loadingMessageIndex !== -1) {\n          updatedMessages[loadingMessageIndex] = {\n            role: 'assistant',\n            message: answer\n          };\n          return updatedMessages;\n        } else {\n          const lastMessage = prevMessages[prevMessages.length - 1];\n          if (lastMessage && lastMessage.role === 'assistant') {\n            const updatedMessage = {\n              ...lastMessage,\n              message: lastMessage.message + answer\n            };\n            return [...prevMessages.slice(0, -1), updatedMessage];\n          } else {\n            return [...prevMessages, {\n              role: 'assistant',\n              message: answer\n            }];\n          }\n        }\n      });\n    }\n  };\n  const sendMessage = () => {\n    if (socket && socket.readyState === WebSocket.OPEN && input.trim()) {\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'user',\n        message: input\n      }]);\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        message: 'loading...'\n      }]);\n      socket.send(input);\n      setInput('');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage();\n  };\n  const resetChat = async () => {\n    if (sessionId) {\n      try {\n        // Call the API to clear chat history\n        await axios.delete(`http://localhost:8000/clear_chat_history/${sessionId}`);\n\n        // Close current socket\n        if (socket && socket.readyState === WebSocket.OPEN) {\n          socket.close();\n        }\n\n        // Clear local state\n        setMessages([]);\n\n        // Create a new session\n        localStorage.removeItem('chatSessionId');\n        setSessionId('');\n\n        // Reconnect socket\n        connectWebSocket();\n      } catch (error) {\n        console.error('Error resetting chat:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    \"data-bs-theme\": \"dark\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mt-5\",\n            children: \"GYM Chatbot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: resetChat,\n            disabled: isConnecting,\n            children: \"Reset Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-window rounded\",\n          style: {\n            border: '1px solid #ccc',\n            padding: '10px',\n            height: '400px',\n            overflowY: 'scroll'\n          },\n          children: [isConnecting && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border text-light\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: \"Connecting to chat server...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${msg.role}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.role === 'user' ? 'You: ' : 'Assistant: '\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"Type your message...\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              disabled: isConnecting || !socket || socket.readyState !== WebSocket.OPEN\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              disabled: isConnecting || !socket || socket.readyState !== WebSocket.OPEN,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"i1Yp5fsmXtF4bT4z+l7pZWXRtHs=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Row","Col","Form","Button","InputGroup","FormControl","ReactMarkdown","axios","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","socket","setSocket","sessionId","setSessionId","localStorage","getItem","isConnecting","setIsConnecting","messagesEndRef","connectWebSocket","wsUrl","newSocket","WebSocket","onopen","console","log","onmessage","event","parsedData","JSON","parse","data","event_type","newSessionId","setItem","handleSocketMessage","onclose","code","onerror","error","ws","readyState","OPEN","close","answer","prevMessages","updatedMessages","loadingMessageIndex","findIndex","msg","role","message","lastMessage","length","updatedMessage","slice","sendMessage","trim","send","handleSubmit","e","preventDefault","resetChat","delete","removeItem","_messagesEndRef$curre","current","scrollIntoView","behavior","children","className","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","disabled","style","border","padding","height","overflowY","map","idx","ref","onSubmit","placeholder","value","onChange","target","type","_c","$RefreshReg$"],"sources":["D:/FYP_Repository/GYM Chatbot 2025.3/frontend/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Container, Row, Col, Form, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport axios from 'axios';\r\n\r\nconst Chat = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [socket, setSocket] = useState(null);\r\n    const [sessionId, setSessionId] = useState(localStorage.getItem('chatSessionId') || '');\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const connectWebSocket = () => {\r\n        setIsConnecting(true);\r\n        \r\n        // Build the WebSocket URL with session ID if available\r\n        const wsUrl = sessionId \r\n            ? `ws://localhost:8000/ws/chat?session_id=${sessionId}`\r\n            : 'ws://localhost:8000/ws/chat';\r\n        \r\n        const newSocket = new WebSocket(wsUrl);\r\n        \r\n        newSocket.onopen = () => {\r\n            console.log('WebSocket connected');\r\n            setIsConnecting(false);\r\n        };\r\n\r\n        newSocket.onmessage = (event) => {\r\n            const parsedData = JSON.parse(event.data);\r\n            \r\n            // Handle session ID message\r\n            if (parsedData.event_type === 'session_id') {\r\n                const newSessionId = parsedData.data;\r\n                setSessionId(newSessionId);\r\n                localStorage.setItem('chatSessionId', newSessionId);\r\n            }\r\n            // Handle history message\r\n            else if (parsedData.event_type === 'history') {\r\n                setMessages(parsedData.data);\r\n            }\r\n            // Handle regular messages\r\n            else {\r\n                handleSocketMessage(event.data);\r\n            }\r\n        };\r\n\r\n        newSocket.onclose = (event) => {\r\n            console.log('WebSocket connection closed', event.code);\r\n            setIsConnecting(false);\r\n        };\r\n\r\n        newSocket.onerror = (error) => {\r\n            console.error('WebSocket error:', error);\r\n            setIsConnecting(false);\r\n        };\r\n\r\n        setSocket(newSocket);\r\n        return newSocket;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const ws = connectWebSocket();\r\n        \r\n        return () => {\r\n            if (ws.readyState === WebSocket.OPEN) {\r\n                ws.close();\r\n            }\r\n        };\r\n    }, []);  // Only connect once on component mount\r\n\r\n    const handleSocketMessage = (data) => {\r\n        const parsedData = JSON.parse(data);\r\n\r\n        if (parsedData.event_type === 'document') {\r\n            // Handle document event\r\n        } else if (parsedData.event_type === 'answer') {\r\n            let answer = parsedData.data;\r\n            setMessages(prevMessages => {\r\n                const updatedMessages = [...prevMessages];\r\n                const loadingMessageIndex = updatedMessages.findIndex(msg => msg.role === 'assistant' && msg.message === 'loading...');\r\n                \r\n                if (loadingMessageIndex !== -1) {\r\n                    updatedMessages[loadingMessageIndex] = { role: 'assistant', message: answer };\r\n                    return updatedMessages;\r\n                } else {\r\n                    const lastMessage = prevMessages[prevMessages.length - 1];\r\n                    if (lastMessage && lastMessage.role === 'assistant') {\r\n                        const updatedMessage = { ...lastMessage, message: lastMessage.message + answer };\r\n                        return [...prevMessages.slice(0, -1), updatedMessage];\r\n                    } else {\r\n                        return [...prevMessages, { role: 'assistant', message: answer }];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (socket && socket.readyState === WebSocket.OPEN && input.trim()) {\r\n            setMessages(prevMessages => [...prevMessages, { role: 'user', message: input }]);\r\n            setMessages(prevMessages => [...prevMessages, { role: 'assistant', message: 'loading...' }]);\r\n            socket.send(input);\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        sendMessage();\r\n    };\r\n\r\n    const resetChat = async () => {\r\n        if (sessionId) {\r\n            try {\r\n                // Call the API to clear chat history\r\n                await axios.delete(`http://localhost:8000/clear_chat_history/${sessionId}`);\r\n                \r\n                // Close current socket\r\n                if (socket && socket.readyState === WebSocket.OPEN) {\r\n                    socket.close();\r\n                }\r\n                \r\n                // Clear local state\r\n                setMessages([]);\r\n                \r\n                // Create a new session\r\n                localStorage.removeItem('chatSessionId');\r\n                setSessionId('');\r\n                \r\n                // Reconnect socket\r\n                connectWebSocket();\r\n                \r\n            } catch (error) {\r\n                console.error('Error resetting chat:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, [messages]);\r\n\r\n    return (\r\n        <Container data-bs-theme=\"dark\">\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={12}>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <h1 className=\"mt-5\">GYM Chatbot</h1>\r\n                        <Button \r\n                            variant=\"danger\" \r\n                            onClick={resetChat}\r\n                            disabled={isConnecting}\r\n                        >\r\n                            Reset Chat\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"chat-window rounded\" style={{ border: '1px solid #ccc', padding: '10px', height: '400px', overflowY: 'scroll' }}>\r\n                        {isConnecting && (\r\n                            <div className=\"text-center p-3\">\r\n                                <div className=\"spinner-border text-light\" role=\"status\">\r\n                                    <span className=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                                <p className=\"mt-2\">Connecting to chat server...</p>\r\n                            </div>\r\n                        )}\r\n\r\n                        {messages.map((msg, idx) => (\r\n                            <div key={idx} className={`chat-message ${msg.role}`}>\r\n                                <strong>{msg.role === 'user' ? 'You: ' : 'Assistant: '}</strong>\r\n                                <ReactMarkdown>{msg.message}</ReactMarkdown>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <div ref={messagesEndRef} />\r\n                    </div>\r\n                    <Form onSubmit={handleSubmit} className=\"mt-3\">\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                placeholder=\"Type your message...\"\r\n                                value={input}\r\n                                onChange={(e) => setInput(e.target.value)}\r\n                                disabled={isConnecting || !socket || socket.readyState !== WebSocket.OPEN}\r\n                            />\r\n                            <Button \r\n                                type=\"submit\" \r\n                                variant=\"primary\"\r\n                                disabled={isConnecting || !socket || socket.readyState !== WebSocket.OPEN}\r\n                            >\r\n                                Send\r\n                            </Button>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}